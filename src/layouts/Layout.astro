---
import AsideMenu from "@/components/AsideMenu.astro"
import { Player } from "@/components/Player"
import { ViewTransitions } from "astro:transitions"

interface Props {
	title: string
}

const { title } = Astro.props
---

<!doctype html>
<html lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ViewTransitions fallback="none" />
	</head>
	<body>
		<div class="overflow-x-auto h-screen overflow-y-hidden">
			<div id="app" class="min-w-[200px] h-full relative p-2 gap-2">
				<aside class="[grid-area:aside] hidden md:flex flex-col h-full overflow-y-auto">
					<AsideMenu />
				</aside>
				<main class="[grid-area:main] rounded bg-zinc-900 h-full overflow-y-auto">
					<slot />
				</main>
				<footer class="[grid-area:player]">
					<Player
						client:load
						transition:name="media-player"
						transition:persist
					/>
				</footer>
			</div>
		</div>
	</body>
</html>
<style>
	#app {
		display: grid;
		grid-template-areas:
			"aside main main"
			"player player player";
		grid-template-columns: 350px 1fr;
		grid-template-rows: 1fr auto;

		@media (width <= 890px) {
			grid-template-columns: 300px 1fr;
		}

		@media (width <= 768px) {
			grid-template-areas:
				"main main main"
				"player player player";
			grid-template-columns: 1fr;
			grid-template-rows: 1fr auto;
		}
	}
</style>
<style is:global>
	html {
		font-family: "CircularStd", system-ui, sans-serif;
		background: #010101;
		color: white;
	}

	:root {
		--m: 17.5;
		--wavefreq: calc(100ms * var(--m));
	}

	.waveform {
		display: flex;
		gap: 2px;
	}

	.waveform .wave1 {
		--wavefreq: calc(200ms * var(--m));
	}

	.waveform .wave2 {
		--wavefreq: calc(300ms * var(--m));
	}

	.waveform .wave3 {
		--wavefreq: calc(400ms * var(--m));
	}

	.waveform .wave4 {
		--wavefreq: calc(500ms * var(--m));
	}

	.waveform [class*='wave'] {
		aspect-ratio: .125/1;
		/*This can all be written on one line:*/
		animation: waveform var(--wavefreq) ease-in-out infinite forwards;
		background-color: white;
		border-radius: 15px;
		width: 2px;
	}

	@keyframes waveform {
		0% {
			transform: scaleY(.3);
		}
		50% {
			transform: scaleY(1.2);
		}
		100% {
			transform: scaleY(.3);
		}
	}

	/* width */
	::-webkit-scrollbar {
		width: 5px;
		height: 5px;
	}

	/* Track */
	::-webkit-scrollbar-track {
		background: transparent;
	}

	/* Handle */
	::-webkit-scrollbar-thumb {
		background: #555;
	}

	/* Handle on hover */
	::-webkit-scrollbar-thumb:hover {
		background: #888;
	}

	@font-face {
		font-family: "CircularStd";
		src: url("/fonts/CircularStd-Medium.woff2") format("woff2");
		font-weight: 500;
		font-style: normal;
		font-display: swap;
	}

	@font-face {
		font-family: "CircularStd";
		src: url("/fonts/CircularStd-Book.woff2") format("woff2");
		font-weight: 400;
		font-style: normal;
		font-display: swap;
	}

	@font-face {
		font-family: "CircularStd";
		src: url("/fonts/CircularStd-Light.woff2") format("woff2");
		font-weight: 300;
		font-style: normal;
		font-display: swap;
	}

	@font-face {
		font-family: "CircularStd";
		src: url("/fonts/CircularStd-Bold.woff2") format("woff2");
		font-weight: 700;
		font-style: normal;
		font-display: swap;
	}

	@font-face {
		font-family: "CircularStd";
		src: url("/fonts/CircularStd-Black.woff2") format("woff2");
		font-weight: 900;
		font-style: normal;
		font-display: swap;
	}
</style>
